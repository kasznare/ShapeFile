<Window x:Class="ShapefileEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dz="http://schemas.devzest.com/presentation/docking"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:ShapefileEditor"
        
        mc:Ignorable="d"
        Title="Shapefile Editor" Height="1080" Width="1920" WindowState="Maximized" Background="#FFEFEEF3" AllowsTransparency="False" SnapsToDevicePixels="True">
    <Window.Resources>
        <local:SolidColorBrushToColorValueConverter  x:Key="SolidColorBrushToColor_ValueConverter"/>
        <local:DecimalToDoubleConverter x:Key="DecimalToDoubleConverter"/>
        <local:DecimalCountToIncrementValueConverter  x:Key="DecimalCountToIncrement_ValueConverter"/>
        <local:FieldMinMaxValueConverter x:Key="FieldMinMax_ValueConverter"/>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="New" Executed="NewCommandBinding_Executed" CanExecute="NewCommandBinding_CanExecute" />
        <CommandBinding Command="Open" Executed="OpenCommandBinding_Executed" CanExecute="OpenCommandBinding_CanExecute" />
        <CommandBinding Command="Save" Executed="SaveCommandBinding_Executed" CanExecute="SaveCommandBinding_CanExecute" />
        <CommandBinding Command="Delete" Executed="DeleteCommandBinding_Executed" CanExecute="DeleteCommandBinding_CanExecute" />
        <CommandBinding Command="MoveUp" Executed="MoveUpCommandBinding_Executed" CanExecute="MoveUpCommandBinding_CanExecute"/>
        <CommandBinding Command="MoveDown" Executed="MoveDownCommandBinding_Executed" CanExecute="MoveDownCommandBinding_CanExecute"/>
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="N" Command="New" />
        <KeyBinding Modifiers="Control" Key="O" Command="Open" />
        <KeyBinding Modifiers="Control" Key="S" Command="Save" />
    </Window.InputBindings>

    <DockPanel >
        <Menu DockPanel.Dock="Top" Background="#FFEFEEF3">
            <MenuItem Header="_File">
                <MenuItem Header="_New Layer" Command="New" CommandParameter="layer"/>
                <MenuItem Header="_Open Shapefile" Command="Open"/>
                <MenuItem Header="_Save Layer" Command="Save"/>
                <MenuItem Header="_Remove Layer"  Command="Delete" CommandParameter="layer"/>
            </MenuItem>
            <MenuItem Header="_Layer">
                <MenuItem Header="Move _Backwards" Command="MoveUp" CommandParameter="layer"/>
                <MenuItem Header="Move _Forwards" Command="MoveDown" CommandParameter="layer"/>
                <MenuItem Header="_Remove Layer"  Command="Delete" CommandParameter="layer"/>
            </MenuItem>
            <MenuItem Header="_Shape">
                <MenuItem Header="_Add Shape" Command="New" CommandParameter="shape"/>
                <MenuItem Header="_Delete Shape" Command="Delete" CommandParameter="shape"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" IsEnabled="False"/>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom" Background="#FF007ACC" Foreground="White">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="190" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock Text="{Binding MouseLatLngPositionText, ElementName=map}" />
            </StatusBarItem>
            <Separator Grid.Column="1" Background="White" />
            <StatusBarItem Grid.Column="2">
                <TextBlock  />
            </StatusBarItem>
            <Separator Grid.Column="3" Background="White" />
            <StatusBarItem Grid.Column="4">
                <ProgressBar Value="0" Width="90" Height="16" BorderBrush="{x:Null}" Background="{x:Null}" Foreground="White" />
            </StatusBarItem>
        </StatusBar>
        <dz:DockControl LeftDockTreeWidth="250" RightDockTreeWidth="250">

            <dz:DockItem x:Name="diAttributes" TabText="Attributes" Title="Attributes" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Right}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">
                <ContentControl Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Content="{Binding Layers.CurrentItem.Shapes}">
                    <ContentControl.ContentTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <ListBox x:Name="shapeAttributesList" Grid.Row="0" Background="WhiteSmoke" ItemsSource="{Binding Attributes}" BorderBrush="{x:Null}" Padding="5" HorizontalContentAlignment="Stretch" Margin="-2">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock 
                                                    Grid.Column="0" 
                                                    Height="22" 
                                                    Text="{Binding Path=FieldDescriptor.Name}" 
                                                    VerticalAlignment="Center" 
                                                    HorizontalAlignment="Stretch"
                                                    Padding="0,3,0,0"/>
                                                <StackPanel 
                                                    Grid.Column="1" 
                                                    HorizontalAlignment="Stretch"
                                                    Margin="0,2,0,2">
                                                    <xctk:DecimalUpDown 
                                                        Value="{Binding Value, Converter={StaticResource DecimalToDoubleConverter}, Mode=TwoWay}"
                                                        Increment="{Binding FieldDescriptor.DecimalCount, Converter={StaticResource DecimalCountToIncrement_ValueConverter}, Mode=OneWay}"
                                                        DefaultValue="0" 
                                                        MinWidth="0" 
                                                        Minimum="{Binding Path=FieldDescriptor, Converter={StaticResource FieldMinMax_ValueConverter}, ConverterParameter=min, Mode=OneWay}"
                                                        Maximum="{Binding Path=FieldDescriptor, Converter={StaticResource FieldMinMax_ValueConverter}, ConverterParameter=max, Mode=OneWay}" >
                                                        <xctk:DecimalUpDown.Style>
                                                            <Style TargetType="xctk:DecimalUpDown">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=FieldDescriptor.DbaseType}" Value="N">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=FieldDescriptor.DbaseType}" Value="F">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </xctk:DecimalUpDown.Style>
                                                    </xctk:DecimalUpDown>
                                                    <local:AsciiTextBox 
                                                        Text="{Binding Path=Value}"
                                                        Height="22"
                                                        BorderBrush="#FFCCCEDB"
                                                        BorderThickness="1"  
                                                        MinWidth="0">
                                                        <local:AsciiTextBox.Style>
                                                            <Style TargetType="local:AsciiTextBox">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=FieldDescriptor.DbaseType}" Value="C">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </local:AsciiTextBox.Style>
                                                    </local:AsciiTextBox>
                                                    <DatePicker 
                                                        SelectedDate="{Binding Path=Value}" 
                                                        BorderBrush="{x:Null}" 
                                                        MinWidth="0"
                                                        Padding="0">
                                                        <DatePicker.Style>
                                                            <Style TargetType="DatePicker">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=FieldDescriptor.DbaseType}" Value="D">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </DatePicker.Style>
                                                    </DatePicker>
                                                    <CheckBox 
                                                        IsChecked="{Binding Path=Value}" 
                                                        MinWidth="0"
                                                        Margin="4">
                                                        <CheckBox.Style>
                                                            <Style TargetType="CheckBox">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=FieldDescriptor.DbaseType}" Value="L">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </CheckBox.Style>
                                                    </CheckBox>
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <GridSplitter Grid.Row="1" Background="#FFC2C3C9" HorizontalAlignment="Stretch"/>
                                <TextBlock Grid.Row="2" DataContext="{Binding SelectedItem.FieldDescriptor, ElementName=shapeAttributesList}" TextWrapping="Wrap" Padding="5">
                                    <Bold><Run Text="{Binding Name}"/></Bold>:&#160;
                                    <Run>
                                        <Run.Style>
                                            <Style TargetType="Run">
                                                <Setter Property="Text" Value=""/><!--unknown type-->
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding DbaseType}" Value="N">
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <MultiBinding StringFormat="N({0}, {1})&#x0a;    Numeric data type of length {0} and {1} decimal places.">
                                                                    <Binding Path="Length"/>
                                                                    <Binding Path="DecimalCount"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding DbaseType}" Value="F">
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <MultiBinding StringFormat="F({0}, {1})&#x0a;    Numeric data type of length {0} and {1} decimal places.">
                                                                    <Binding Path="Length"/>
                                                                    <Binding Path="DecimalCount"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding DbaseType}" Value="C">
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <MultiBinding StringFormat="C({0})&#x0a;    String data type of length {0}.">
                                                                    <Binding Path="Length"/>
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding DbaseType}" Value="D">
                                                        <Setter Property="Text" Value="D&#x0a;    Date data type."/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding DbaseType}" Value="L">
                                                        <Setter Property="Text" Value="L&#x0a;    Logical data type."/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Setters>
                                                <Setter Property="TextBlock.Visibility" Value="Visible"/>
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedItem, ElementName=shapeAttributesList}" Value="{x:Null}">
                                                    <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=ItemsSource, ElementName=shapeAttributesList}" Value="{x:Null}">
                                                    <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Grid.Row="2" DataContext="{Binding SelectedItem.FieldDescriptor, ElementName=shapeAttributesList}" TextWrapping="Wrap" Padding="5">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Setters>
                                                <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                                            </Style.Setters>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedItem, ElementName=shapeAttributesList}" Value="{x:Null}">
                                                    <Setter Property="TextBlock.Visibility" Value="Visible"/>
                                                    <Setter Property="TextBlock.Text" Value="No data field selected"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Path=ItemsSource, ElementName=shapeAttributesList}" Value="{x:Null}">
                                                    <Setter Property="TextBlock.Visibility" Value="Visible"/>
                                                    <Setter Property="TextBlock.Text" Value="No shape selected"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ContentControl.ContentTemplate>
                </ContentControl>
            </dz:DockItem>

            <dz:DockItem x:Name="diLayers" TabText="Layers" Title="Layers" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Left}">
                <DockPanel >
                    <StackPanel DockPanel.Dock="Top" Background="#FFEEEEF2">
                        <ToolBar ToolBarTray.IsLocked="True" Background="{x:Null}">
                            <Button ToolTip="Create new layer" Focusable="False" Command="New" CommandParameter="layer">
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="Icons/document-plus.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled}" Value="False">
                                                    <Setter Property="Source" Value="Icons/disabled/document-plus.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <Button ToolTip="Open layer from shapefile" Focusable="False" Command="Open">
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="Icons/folder.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled}" Value="False">
                                                    <Setter Property="Source" Value="Icons/disabled/folder.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <Button ToolTip="Save selected layer to shapefile" Focusable="False" Command="Save">
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="Icons/disk-black.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled}" Value="False">
                                                    <Setter Property="Source" Value="Icons/disabled/disk-black.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <Button x:Name="btnDeleteLayer" ToolTip="Remove selected layer." Focusable="False" Command="Delete" CommandParameter="layer">
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="Icons/cross.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled}" Value="False">
                                                    <Setter Property="Source" Value="Icons/disabled/cross.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <Separator Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                            <Button x:Name="btnMoveLayerUp" ToolTip="Move selected layer backwards." Focusable="False" Command="MoveUp" CommandParameter="layer">
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="Icons/shape_move_backwards.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled}" Value="False">
                                                    <Setter Property="Source" Value="Icons/disabled/shape_move_backwards.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <Button x:Name="btnMoveLayerDown" ToolTip="Move selected layer forwards." Focusable="False" Command="MoveDown" CommandParameter="layer">
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="Icons/shape_move_forwards.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled}" Value="False">
                                                    <Setter Property="Source" Value="Icons/disabled/shape_move_forwards.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                        </ToolBar>
                    </StackPanel>

                    <ListBox ItemsSource="{Binding Layers}" 
                          HorizontalAlignment="Stretch" 
                          HorizontalContentAlignment="Stretch" 
                          BorderBrush="{x:Null}" 
                          Background="Transparent"
                          IsSynchronizedWithCurrentItem="True" 
                          ScrollViewer.CanContentScroll="False" 
                          ScrollViewer.VerticalScrollBarVisibility="Auto" 
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             VerticalAlignment="Top">
                        <ListBox.Resources>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                                        <Condition Property="IsSelected" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="#20CCCEDB" />
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                        <Condition Property="IsSelected" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" TargetName="Bd" Value="#10007ACC" />
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch" Margin="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="22"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="22"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="22"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <local:TriangleToggleButton Grid.Column="0" Grid.Row="0"/>
                                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Name}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <CheckBox x:Name="cbLayerVisible" Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right"  VerticalAlignment="Center" IsChecked="{Binding IsLayerVisible}"/>

                                    <StackPanel Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1">
                                        <StackPanel.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Children[0].IsChecked, RelativeSource={RelativeSource AncestorType=Grid}}" Value="False">
                                                        <Setter Property="StackPanel.Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                        <Grid HorizontalAlignment="Stretch" Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="22"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="22"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <local:TriangleToggleButton Grid.Column="0" Grid.Row="0"/>
                                            <TextBlock Grid.Column="1" Grid.Row="0" Text="Attributes" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            <StackPanel Grid.Column="1" Grid.Row="1" >
                                                <StackPanel.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=Children[0].IsChecked, RelativeSource={RelativeSource AncestorType=Grid}}" Value="False">
                                                                <Setter Property="StackPanel.Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <ListBox ItemsSource="{Binding Header.Fields}" 
                                                      HorizontalAlignment="Stretch" 
                                                      HorizontalContentAlignment="Stretch" 
                                                      ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                                      BorderBrush="{x:Null}" 
                                                      Background="Transparent"
                                                      IsSynchronizedWithCurrentItem="True">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Name}"/>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>
                                            </StackPanel>
                                        </Grid>
                                        <Grid HorizontalAlignment="Stretch" Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="22"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="22"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <local:TriangleToggleButton Grid.Column="0" Grid.Row="0"/>
                                            <TextBlock Grid.Column="1" Grid.Row="0" Text="Shapes" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            <StackPanel Grid.Column="1" Grid.Row="1" >
                                                <StackPanel.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=Children[0].IsChecked, RelativeSource={RelativeSource AncestorType=Grid}}" Value="False">
                                                                <Setter Property="StackPanel.Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>
                                                <ListBox ItemsSource="{Binding Shapes}" 
                                                     HorizontalAlignment="Stretch" 
                                                     HorizontalContentAlignment="Stretch" 
                                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                                     BorderBrush="{x:Null}" 
                                                      Background="Transparent"
                                                     IsSynchronizedWithCurrentItem="True">
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Name}"/>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>
                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </dz:DockItem>

            <dz:DockItem x:Name="diStyle" TabText="Style" Title="Style" ShowAction="{dz:ShowAsSidePaneAction Source=2, Side=Bottom, Size=0.3*, Target=1}" Background="WhiteSmoke">
                <ContentControl Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Content="{Binding Layers}">
                    <ContentControl.ContentTemplate>
                        <DataTemplate>
                            <Grid MaxWidth="{Binding ElementName=diStyle, Path=ActualWidth}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="15" MinWidth="15"/>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!--<GridSplitter Grid.Column="1" Grid.RowSpan="100" Width="5" Margin="5" BorderBrush="#FFCCCEDB" BorderThickness="1,0,1,0" Opacity="0.5" Background="#00000000" Foreground="{x:Null}" Grid.IsSharedSizeScope="True" />-->
                                <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0">Fill Color</TextBlock>
                                <xctk:ColorPicker Grid.Row="0" Grid.Column="2" ShowRecentColors="True" ColorMode="ColorCanvas" BorderBrush="#7FCCCEDB" Height="22" Margin="0,3,5,3" 
                                                  SelectedColor="{Binding Path=Fill, Converter={StaticResource SolidColorBrushToColor_ValueConverter}}"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0">Stroke Color</TextBlock>
                                <xctk:ColorPicker Grid.Row="1" Grid.Column="2" ShowRecentColors="True" ColorMode="ColorCanvas" BorderBrush="#FFCCCEDB" Height="22" Margin="0,3,5,3" 
                                                  SelectedColor="{Binding Path=Stroke, Converter={StaticResource SolidColorBrushToColor_ValueConverter}}"/>
                                <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="5,0,0,0">Stroke thickness</TextBlock>
                                <xctk:DecimalUpDown Grid.Row="2" Grid.Column="2" Height="22" BorderBrush="#FFCCCEDB" BorderThickness="1" Margin="0,3,5,3" AutoSelectBehavior="OnFocus"  VerticalContentAlignment="Center" Value="{Binding Path=StrokeThickness}" DefaultValue="2" Minimum="0" Maximum="100" Increment="0.1" AllowSpin="True"/>
                            </Grid>

                        </DataTemplate>
                    </ContentControl.ContentTemplate>
                </ContentControl>
            </dz:DockItem>

            <dz:DockItem x:Name="diLayerProperties" TabText="Layer Properties" Title="Layer Properties" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Document}">
                <Grid Background="WhiteSmoke">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" MinWidth="200" HorizontalAlignment="Stretch" Margin="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" MinWidth="90"/>
                            <ColumnDefinition Width="*" MinWidth="80"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="Layer name"/>
                        <TextBox   Grid.Row="0" Grid.Column="2" Text="{Binding Layers.CurrentItem.Name}" BorderBrush="#FFCCCEDB" BorderThickness="1"/>

                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="File path"/>
                        <TextBlock Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Text="{Binding Layers.CurrentItem.FileName}"/>

                        <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Text="Shape type"/>
                        <TextBlock Grid.Row="3" Grid.Column="2" VerticalAlignment="Center" Text="{Binding Layers.CurrentItem.ShapeGeometryType}"/>

                        <TextBlock Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Text="Shape count"/>
                        <TextBlock Grid.Row="4" Grid.Column="2" VerticalAlignment="Center" Text="{Binding Layers.CurrentItem.Shapes.Count}"/>

                        <TextBlock Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Text="Attribute count"/>
                        <TextBlock Grid.Row="5" Grid.Column="2" VerticalAlignment="Center" Text="{Binding Layers.CurrentItem.Header.NumFields}"/>

                    </Grid>

                    <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" ResizeBehavior="BasedOnAlignment" Background="#FFC2C3C9"/>

                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <ListView Grid.Row="0" Margin="4" x:Name="layerAttributeListView" ItemsSource="{Binding Layers.CurrentItem.Attributes}" BorderBrush="#FFCCCEDB" BorderThickness="1" Background="white" SelectionMode="Single" IsSynchronizedWithCurrentItem="True">
                            <ListView.Resources>
                                <GridView x:Key="one">
                                    <GridView.ColumnHeaderContainerStyle>
                                        <Style TargetType="GridViewColumnHeader">
                                            <Setter Property="Height" Value="22"/>
                                            <Setter Property="Background" Value="#FFF5F5F5"/>
                                            <Setter Property="BorderBrush" Value="#FFE0E3E6"/>
                                            <Setter Property="BorderThickness" Value="1,0,0,1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                            <Setter Property="Padding" Value="5,0,0,0"/>
                                            <Setter Property="Width" Value="auto"/>
                                        </Style>
                                    </GridView.ColumnHeaderContainerStyle>
                                    <GridViewColumn Header="Attribute Name" Width="150">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}" Padding="0,4,0,4"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Type" Width="60">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Text" Value="unknown type"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding DbaseType}" Value="N">
                                                                    <Setter Property="Text" Value="Numeric"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DbaseType}" Value="F">
                                                                    <Setter Property="Text" Value="Numeric"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DbaseType}" Value="C">
                                                                    <Setter Property="Text" Value="Text"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DbaseType}" Value="D">
                                                                    <Setter Property="Text" Value="Date"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding DbaseType}" Value="L">
                                                                    <Setter Property="Text" Value="Logical"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Length"  Width="50">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Length}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Decimals"  Width="50">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding DecimalCount}" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.Resources>
                            <ListView.Style>
                                <Style TargetType="ListView">
                                    <Setter Property="View" Value="{StaticResource one}" />
                                </Style>
                            </ListView.Style>
                        </ListView>
                        <StackPanel Grid.Row="1" Margin="4">
                            <WrapPanel Orientation="Horizontal">
                                <StackPanel Orientation="Vertical" Margin="0,0,10,0">
                                    <TextBlock VerticalAlignment="Center" Height="18" Text="Name"/>
                                    <local:AsciiTextBox x:Name="newFieldName" MinWidth="150" MaxLength="32" Height="22" BorderBrush="#FFCCCEDB" BorderThickness="1" />
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Margin="0,0,10,0" >
                                    <TextBlock VerticalAlignment="Center" Height="18" Text="Type"/>
                                    <ComboBox x:Name="newFieldType" MinWidth="70" Height="22">
                                        <ComboBoxItem Tag="N" Content="Numeric" IsSelected="True"/>
                                        <ComboBoxItem Tag="C" Content="Text"/>
                                        <ComboBoxItem Tag="D" Content="Date"/>
                                        <ComboBoxItem Tag="L" Content="Logical"/>
                                    </ComboBox>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Margin="0,0,10,0">
                                    <TextBlock VerticalAlignment="Center" Height="18" Text="Length"/>
                                    <xctk:IntegerUpDown 
                                        x:Name="newFieldLength" 
                                        Minimum="1" 
                                        Value="5" 
                                        ClipValueToMinMax="True" 
                                        Height="22" 
                                        BorderBrush="#FFCCCEDB" 
                                        BorderThickness="1">
                                        <xctk:IntegerUpDown.Style>
                                            <Style TargetType="xctk:IntegerUpDown">
                                                <Setter Property="Maximum" Value="254"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=newFieldType, Path=SelectedIndex}" Value="0">
                                                        <Setter Property="Maximum" Value="20"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </xctk:IntegerUpDown.Style>
                                    </xctk:IntegerUpDown>
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=newFieldType, Path=SelectedIndex}" Value="0">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ElementName=newFieldType, Path=SelectedIndex}" Value="1">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Margin="0,0,10,0">
                                    <TextBlock VerticalAlignment="Center" Height="18" Text="Decimals"/>
                                    <xctk:IntegerUpDown 
                                        x:Name="newFieldDecimals" 
                                        Minimum="0" 
                                        Maximum="15" 
                                        Value="0" 
                                        ClipValueToMinMax="True" 
                                        Height="22" 
                                        BorderBrush="#FFCCCEDB" 
                                        BorderThickness="1" />
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=newFieldType, Path=SelectedIndex}" Value="0">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>
                                </StackPanel>
                                <Button Height="22" Margin="0,0,10,0" Content="Add New" Command="New" CommandParameter="field" VerticalAlignment="Bottom"/>
                                <Button Height="22" Content="Remove" Command="Delete" CommandParameter="field" VerticalAlignment="Bottom"/>
                            </WrapPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </dz:DockItem>

            <dz:DockItem x:Name="diMap" TabText="Map" Title="Map" ShowAction="{dz:ShowAsDockPositionAction DockPosition=Document}">
                <DockPanel >
                    <StackPanel DockPanel.Dock="Top" Background="#FFEEEEF2">
                        <ToolBar ToolBarTray.IsLocked="True" Background="{x:Null}">
                            <Button ToolTip="Add new shape." Command="New" CommandParameter="shape" Focusable="False">
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="Icons/plus.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled}" Value="False">
                                                    <Setter Property="Source" Value="Icons/disabled/plus.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                            <Button ToolTip="Delete selected shape." Focusable="False" Command="Delete" CommandParameter="shape">
                                <Image Width="16" Height="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Source" Value="Icons/cross.png"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=IsEnabled}" Value="False">
                                                    <Setter Property="Source" Value="Icons/disabled/cross.png" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </Button>
                        </ToolBar>
                    </StackPanel>
                    <Grid>
                        <local:Map x:Name="map" Zoom="15" MaxZoom="18" MinZoom="1" MouseWheelZoomType="MousePositionWithoutCenter" SnapsToDevicePixels="True"/>
                        <local:MapSettings x:Name="mapSettings" 
                                       SelectedProvider="{Binding ElementName=map, Path=MapProvider, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       ShowCrosshairChangedEvent="ShowCrosshairEventHandler"/>
                    </Grid>
                </DockPanel>
            </dz:DockItem>

            <dz:DockItem x:Name="diMessages" TabText="Messages" Title="Messages"  ><!--ShowAction="{dz:ShowAsDockPositionAction DockPosition=Bottom}"-->
                <TextBox x:Name="textBoxMessages" IsReadOnly="True" IsUndoEnabled="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" TextChanged="textBoxMessages_TextChanged" BorderBrush="{x:Null}" BorderThickness="0" Initialized="textBoxMessages_Initialized"/>
            </dz:DockItem>

        </dz:DockControl>
    </DockPanel>
</Window>
